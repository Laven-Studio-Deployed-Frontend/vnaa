{"version":3,"file":"static/js/888.68900cea.chunk.js","mappings":"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","sources":["components/shared/Loading/index.tsx","hooks/useRedux.ts","screen/Payment/PaymentConfirm/index.tsx"],"sourcesContent":["import { Spin } from 'antd'\n\nexport default function Loading() {\n    return (\n        <div className='fixed top-0 left-0 bottom-0 right-0 bg-[#ffffffb9] z-50 flex justify-center items-center'>\n            <Spin size='large' />\n        </div>\n    )\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport store from \"../redux/store/store\";\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import IonIcon from \"@reacticons/ionicons\";\nimport IMAGES from \"../../../assets\";\nimport Button from \"../../../components/Button\";\nimport { useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/useRedux\";\nimport Loading from \"../../../components/shared/Loading\";\nimport { authUpdateInfoBanking } from \"../../../redux/reducers/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../../../configs/firebase.config\";\nimport { toast } from \"react-toastify\";\nimport history from \"../../../redux/store/history\";\n\nexport default function PaymentConfirm() {\n\n    const [account, setAccount] = useState<any>(null)\n    const uid = useAppSelector(state => state.auth.uid)\n\n    const [isNumberBank, setIsNumberBank] = useState<string>('')\n    const [isNameBank, setIsNameBank] = useState<string>('')\n    const [isNameAccount, setIsNameAccount] = useState<string>('')\n    const [isListBank, setIsListBank] = useState<any>([])\n\n    const dispatch = useAppDispatch()\n    const loading = useAppSelector(state => state.auth.isLoading)\n\n    const handleUpdatePayment = () => {\n        if (account) {\n            console.log(account);\n            if (isNumberBank && isNameBank && isNameAccount) {\n                const data = {\n                    numberBank: isNumberBank,\n                    nameBank: isNameBank,\n                    nameAccount: isNameAccount,\n                }\n                dispatch(authUpdateInfoBanking(data))\n            } else if (account?.nameAccount && account?.nameBank && account?.numberBank) {\n                history.push('/payment/debit-confirm')\n            } else {\n                toast.error('Vui lòng nhập đầy đủ thông tin')\n            }\n        }\n    }\n\n    const getAccount = async () => {\n        const docRef = doc(db, \"users\", uid);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n            setAccount(docSnap.data());\n        }\n    }\n\n    const getListBank = async () => {\n        const res = await fetch('https://api.vietqr.io/v2/banks')\n        const data = await res.json()\n        setIsListBank(data?.data)\n    }\n\n    useEffect(() => {\n        getAccount()\n        getListBank()\n    }, [])\n\n\n\n\n    return (\n        <div className=\"p-4 flex flex-col items-center gap-4\">\n            {\n                loading && <Loading />\n            }\n            <h1 className=\"font-bold\">\n                Thông tin ngân hàng thụ hưởng\n            </h1>\n            <div className=\"relative\">\n                <img src={IMAGES.Card} alt=\"\" />\n                <div className=\"absolute top-4 left-4 text-white font-medium text-xl\">\n                    {\n                        account?.nameBank ? account?.nameBank : (\n                            isNameBank ? isNameBank : 'Chọn ngân hàng'\n                        )\n                    }\n                </div>\n                <div className=\"absolute bottom-4 left-4 text-white flex flex-col\">\n                    {\n                        account?.numberBank ? <span className=\"text-xl font-bold\">{account?.numberBank}</span> : (\n                            isNumberBank ? <span className=\"text-xl font-bold\">{isNumberBank}</span> : <span>*******************</span>\n                        )\n                    }\n                    {\n                        account?.nameAccount ? <span className=\"text-sm uppercase\">{account?.nameAccount}</span> : (\n                            isNameAccount ? <span className=\"text-sm uppercase\">{isNameAccount}</span> : <span>*******************</span>\n                        )\n                    }\n                </div>\n            </div>\n            <div className=\"w-full flex flex-col gap-4 items-start\">\n                <div className=\"flex justify-center items-center gap-2 p-2 border w-full max-w-[20rem] border-[#cfcfcf]\">\n                    <input type=\"text\" placeholder=\"Số thẻ ngân hàng\" className=\"outline-none flex-1 bg-transparent\"\n                        onChange={(e) => setIsNumberBank(e.target.value)}\n                        value={account?.numberBank ? account?.numberBank : isNumberBank}\n                        disabled={account?.numberBank ? true : false}\n                    />\n                    <IonIcon name=\"card\" />\n                </div>\n                <div className=\"flex justify-center items-center gap-2 p-2 border w-full max-w-[20rem] border-[#cfcfcf]\">\n                    <input type=\"text\" placeholder=\"Tên chủ tài khoản\" className=\"outline-none flex-1 bg-transparent\"\n                        onChange={(e) => setIsNameAccount(e.target.value)}\n                        value={account?.nameAccount ? account?.nameAccount : isNameAccount}\n                        disabled={account?.nameAccount ? true : false}\n                    />\n                    <IonIcon name=\"person\" />\n                </div>\n                <div className=\"flex justify-center items-center gap-2 p-2 border w-full max-w-[20rem] border-[#cfcfcf]\">\n                    <select name=\"nameBanking\" className=\"outline-none flex-1 bg-transparent\"\n                        onChange={(e) => setIsNameBank(e.target.value)}\n                        value={account?.nameBank ? account?.nameBank : isNameBank}\n                        disabled={account?.nameBank ? true : false}\n                    >\n                        <option value={''}>\n                            Chọn tên ngân hàng\n                        </option>\n                        {\n                            isListBank?.map((item: any, index: number) => (\n                                <option value={item?.shortName} key={index}>\n                                    {item?.shortName}\n                                </option>\n                            ))\n                        }\n                    </select>\n                </div>\n                <div className={`  flex justify-center ${account?.nameBank || account?.numberBank || account?.nameAccount ? 'w-full' : ' max-w-[20rem] w-full'}`}>\n                    <Button kind=\"tertiary\" className={`w-auto font-bold py-2 px-5 rounded-[10rem] duration-150 bg-primary`}\n                        onClick={() => handleUpdatePayment()}\n                    >\n                        {\n                            !account?.nameBank || !account?.numberBank || !account?.nameAccount ? 'Xác nhận' : 'Tiếp tục'\n                        }\n                    </Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"names":["Loading","_jsx","className","children","Spin","size","useAppDispatch","useDispatch","useAppSelector","useSelector","PaymentConfirm","_useState","useState","_useState2","_slicedToArray","account","setAccount","uid","state","auth","_useState3","_useState4","isNumberBank","setIsNumberBank","_useState5","_useState6","isNameBank","setIsNameBank","_useState7","_useState8","isNameAccount","setIsNameAccount","_useState9","_useState10","isListBank","setIsListBank","dispatch","loading","isLoading","getAccount","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","docRef","docSnap","wrap","_context","prev","next","doc","db","getDoc","sent","exists","data","stop","apply","arguments","getListBank","_ref2","_callee2","res","_context2","fetch","json","useEffect","_jsxs","src","IMAGES","Card","alt","nameBank","numberBank","nameAccount","type","placeholder","onChange","e","target","value","disabled","IonIcon","name","map","item","index","shortName","concat","Button","kind","onClick","console","log","authUpdateInfoBanking","history","push","toast","error","handleUpdatePayment"],"sourceRoot":""}