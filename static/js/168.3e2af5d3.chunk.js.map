{"version":3,"file":"static/js/168.3e2af5d3.chunk.js","mappings":"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","sources":["components/Modal/index.tsx","hooks/useRedux.ts","screen/Payment/Debit/index.tsx"],"sourcesContent":["import { Button, Modal, Table } from 'antd';\nimport React, { useEffect } from 'react'\n\ntype ModalProps = {\n    open: boolean;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n    totalTerm: number;\n    loan: number;\n    interestRate: number;\n}\n\n// const dataSource = [\n//     {\n//         key: '1',\n//         periodically: 'Kì thứ 1',\n//         AmountOfMoney: '2,533,334 đ',\n//         ClosingDate: '21/12/2023',\n//     },\n//     {\n//         key: '2',\n//         periodically: 'Kỳ thứ 2',\n//         AmountOfMoney: '2,514,584 đ',\n//         ClosingDate: '21/01/2024',\n//     },\n// ];\n\nconst columns = [\n    {\n        title: 'Kì',\n        dataIndex: 'periodically',\n        key: 'periodically',\n    },\n    {\n        title: 'Số tiền',\n        dataIndex: 'AmountOfMoney',\n        key: 'AmountOfMoney',\n    },\n    {\n        title: 'Ngày đóng',\n        dataIndex: 'ClosingDate',\n        key: 'ClosingDate',\n    },\n];\n\n\nexport default function ModalTable({ open, setOpen, totalTerm, loan, interestRate }: ModalProps) {\n\n    const [dataSource, setDataSource] = React.useState<any[]>([])\n\n    const handleShowDetail = (totalTerm: number, loan: number, interestRate: number) => {\n\n        const principalPerMonth = loan / totalTerm; // tiền gốcMỗi tháng\n        const FirstMonthInterestRate = (loan * interestRate) / 100; // tiền lãi tháng đầu\n\n        const data = [];\n\n        for (let i = 1; i <= totalTerm; i++) {\n            const date = new Date();\n            date.setMonth(date.getMonth() + i);\n\n            let total = 0;\n            if (i === 1) {\n                total = principalPerMonth + FirstMonthInterestRate;\n            } else {\n                total = principalPerMonth + ((loan - (i - 1) * principalPerMonth) * interestRate) / 100;\n            }\n\n            data.push({\n                key: i,\n                periodically: `Kì thứ ${i}`,\n                AmountOfMoney: formatMoney(total),\n                ClosingDate: formatDate(date),\n            })\n        }\n\n        setDataSource(data)\n\n\n\n    }\n\n    // Format tiền\n    function formatMoney(number: number) {\n        number = Math.round(number * 1000) / 1000;\n\n        return number\n            .toFixed(0)\n            .replace(/\\D/g, \"\")\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    // Format ngày\n    function formatDate(date: Date) {\n        return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n    }\n\n    useEffect(() => {\n        handleShowDetail(totalTerm, loan, interestRate)\n    }, [open])\n\n    console.log(totalTerm, loan, interestRate);\n\n\n    return (\n        <Modal\n            open={open}\n            onCancel={() => setOpen(false)}\n            footer={[\n                <Button key=\"close\" onClick={() => setOpen(false)}>\n                    Đóng\n                </Button>\n            ]}\n        >\n            <Table dataSource={dataSource} columns={columns} />\n        </Modal>\n    )\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport store from \"../redux/store/store\";\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { InputNumber, Select, Space } from \"antd\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"../../../components/Button\";\nimport ModalTable from \"../../../components/Modal\";\nimport { db } from \"../../../configs/firebase.config\";\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/useRedux\";\nimport { loanForUser } from \"../../../redux/reducers/auth\";\nimport history from \"../../../redux/store/history\";\n\nexport default function Debit() {\n\n    const [isValueMoney, setIsValueMoney] = useState<number>(50000000);\n    const [isValueMonth, setIsValueMonth] = useState<number>(24);\n    const [isInterestRate, setIsInterestRate] = useState<number>(0.9);\n    const [account, setAccount] = useState<any>(null)\n\n    const [open, setOpen] = useState(false);\n\n    const [isFirstPeriodAmount, setIsFirstPeriodAmount] = useState<number>(0);\n\n    const dateNow = new Date();\n    const date = dateNow.getDate();\n    const month = dateNow.getMonth() + 1;\n    const year = dateNow.getFullYear();\n\n    const dispatch = useAppDispatch()\n    const uid = useAppSelector(state => state.auth.uid)\n\n    function handleChange(value: number | null) {\n        if (value !== null) {\n            setIsValueMoney(value);\n        }\n    }\n\n    function formatMoney(number: number) {\n        number = Math.round(number * 1000) / 1000;\n\n        return number\n            .toFixed(0)\n            .replace(/\\D/g, \"\")\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n\n    function handleFirstPeriodAmount() {\n        const isCost = isValueMoney / isValueMonth\n        const IsInterestPeriod1 = isValueMoney * (0.9 / 100)\n        const isAmountPayableForPeriod1 = isCost + IsInterestPeriod1\n\n        setIsFirstPeriodAmount(isAmountPayableForPeriod1)\n    }\n\n    const getAccount = async () => {\n        const docRef = doc(db, \"users\", uid);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            setAccount(docSnap.data());\n        } else {\n            console.log(\"No such document!\");\n        }\n\n    }\n\n    useEffect(() => {\n        handleFirstPeriodAmount()\n    }, [isValueMoney, isValueMonth])\n\n    const handleLoanConfirmation = async () => {\n\n        if (account?.address && account?.cmnd && account?.dateOfBirth && account?.fullName && account?.genre && account?.income && account?.job && account?.phoneNumber && account?.purpose && account?.relationship && account?.nameAccount && account?.nameBank && account?.numberBank && account?.image && account?.photoURL) {\n            dispatch(loanForUser({\n                uid: uid,\n                loanAmount: isValueMoney,\n                loanMonth: isValueMonth,\n                loanInterestRate: isInterestRate,\n            }))\n            history.push('/payment/debit-confirm')\n        } else {\n            dispatch(loanForUser({\n                uid: uid,\n                loanAmount: isValueMoney,\n                loanMonth: isValueMonth,\n                loanInterestRate: isInterestRate,\n            }))\n            history.push('/user/accuracy')\n        }\n    }\n\n    useEffect(() => {\n        getAccount()\n    }, [])\n\n\n\n    return (\n        <div className=\" flex flex-col gap-4 items-center\">\n            <div className=\"debit-card-color px-4 py-8 flex w-full flex-col gap-4\">\n                <div className=\"flex flex-col gap-4\">\n                    <div className=\"flex flex-col gap-4 w-full\">\n                        <label htmlFor=\"\" className=\"font-bold text-white\">Số tiền vay</label>\n                        <InputNumber\n                            className=\"w-full text-base p-1\"\n                            min={20000000}\n                            max={500000000}\n                            defaultValue={isValueMoney}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"w-full justify-between items-center flex\">\n                        <p>Từ 20 triệu</p>\n                        <p>Đến 500.000.000</p>\n                    </div>\n                </div>\n                <div className=\"w-full flex justify-center\">\n                    <div className=\"w-full justify-between max-w-[28rem] items-center flex\">\n                        <p className=\"font-bold\">Chọn thời hạn vay</p>\n                        <div>\n                            <Space wrap className=\"bg-white text-lg\">\n                                <Select\n                                    defaultValue={isValueMonth}\n                                    style={{ width: 150 }}\n                                    onChange={(value: number) => setIsValueMonth(value)}\n                                    bordered={false}\n                                    options={[\n                                        { value: 6, label: '6 tháng' },\n                                        { value: 12, label: '12 tháng' },\n                                        { value: 24, label: '24 tháng' },\n                                        { value: 36, label: '36 tháng' },\n                                        { value: 48, label: '48 tháng' },\n                                        { value: 60, label: '60 tháng' },\n                                    ]}\n                                />\n                            </Space>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex flex-col gap-4 items-center w-full px-4\">\n                <div className=\"flex flex-col items-center debit-card-color w-full shadow-sd-tertiary gap-2 max-w-[320px] p-4 rounded-xl\">\n                    <h1 className=\"font-bold text-white text-lg\">Thông tin khoản vay</h1>\n                    <div className=\"w-full justify-between flex items-center\">\n                        <p className=\"font-bold text-sm\">Số tiền</p>\n                        <span className=\"text-sm\">{formatMoney(isValueMoney)} đ</span>\n                    </div>\n                    <div className=\"w-full justify-between flex items-center\">\n                        <p className=\"font-bold text-sm\">Thời hạn vay</p>\n                        <span className=\"text-sm\">{isValueMonth} tháng</span>\n                    </div>\n                    <div className=\"w-full justify-between flex items-center\">\n                        <p className=\"font-bold text-sm\">Ngày vay</p>\n                        <span className=\"text-sm\">{date}/{month}/{year}</span>\n                    </div>\n                    <div className=\"w-full justify-between flex items-center\">\n                        <p className=\"font-bold text-sm\">Hình thức thanh toán</p>\n                        <span className=\"text-sm\">Trả góp mỗi tháng</span>\n                    </div>\n                </div>\n                <div className=\"w-full flex flex-col gap-4 \">\n                    <div className=\"w-full justify-between flex items-center max-w-[24rem]\">\n                        <p className=\"font-bold text-sm text-gray-700\">Trả nợ kì đầu</p>\n                        <span className=\"text-lg\">{formatMoney(isFirstPeriodAmount)} đ</span>\n                    </div>\n                    <div className=\"w-full justify-between flex items-center max-w-[24rem]\">\n                        <p className=\"font-bold text-sm text-gray-700\">Lãi suất hàng tháng</p>\n                        <span className=\"text-lg\">{isInterestRate} %</span>\n                    </div>\n                    <div className=\"w-full justify-between flex items-center max-w-[24rem]\">\n                        <Button className=\"text-sm font-semibold text-blue-500\"\n                            onClick={() => setOpen(true)}\n                        >\n                            Chi tiết trả nợ\n                        </Button>\n                    </div>\n                </div>\n            </div>\n            <Button kind=\"tertiary\" className=\"text-xl font-medium rounded-full py-4 px-8 bg-primary border-2 duration-150 hover:bg-white hover:border-primary hover:text-primary\"\n                onClick={() => handleLoanConfirmation()}\n            >\n                Xác nhận khoản vay\n            </Button>\n            {\n                open && <ModalTable open={open} setOpen={setOpen} interestRate={isInterestRate} loan={isValueMoney} totalTerm={isValueMonth} />\n            }\n        </div>\n    )\n\n}"],"names":["columns","title","dataIndex","key","ModalTable","_ref","open","setOpen","totalTerm","loan","interestRate","_React$useState","React","_React$useState2","_slicedToArray","dataSource","setDataSource","formatMoney","number","Math","round","toFixed","replace","formatDate","date","concat","getDate","getMonth","getFullYear","useEffect","principalPerMonth","FirstMonthInterestRate","data","i","Date","setMonth","total","push","periodically","AmountOfMoney","ClosingDate","handleShowDetail","console","log","_jsx","Modal","onCancel","footer","Button","onClick","children","Table","useAppDispatch","useDispatch","useAppSelector","useSelector","Debit","_useState","useState","_useState2","isValueMoney","setIsValueMoney","_useState3","_useState4","isValueMonth","setIsValueMonth","_useState5","_useState6","isInterestRate","_useState7","_useState8","account","setAccount","_useState9","_useState10","_useState11","_useState12","isFirstPeriodAmount","setIsFirstPeriodAmount","dateNow","month","year","dispatch","uid","state","auth","getAccount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","docRef","docSnap","wrap","_context","prev","next","doc","db","getDoc","sent","exists","stop","apply","arguments","handleLoanConfirmation","_ref2","_callee2","_context2","address","cmnd","dateOfBirth","fullName","genre","income","job","phoneNumber","purpose","relationship","nameAccount","nameBank","numberBank","image","photoURL","loanForUser","loanAmount","loanMonth","loanInterestRate","history","_jsxs","className","htmlFor","InputNumber","min","max","defaultValue","onChange","value","Space","Select","style","width","bordered","options","label","kind"],"sourceRoot":""}